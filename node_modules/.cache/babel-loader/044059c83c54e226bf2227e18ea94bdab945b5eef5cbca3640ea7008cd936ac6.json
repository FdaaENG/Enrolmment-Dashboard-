{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart({\n  data,\n  lang,\n  translations\n}) {\n  _s();\n  const universities = [...new Set(data.map(row => row.GEO))];\n  const [selectedUni, setSelectedUni] = useState(universities[0]);\n  const filtered = data.filter(row => row.GEO === selectedUni && row.REF_DATE && row.VALUE);\n  const chartData = {\n    labels: filtered.map(row => row.REF_DATE),\n    datasets: [{\n      label: translations.lineChart,\n      data: filtered.map(row => parseInt(row.VALUE)),\n      fill: false,\n      borderColor: \"blue\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.lineChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: translations.selectUni\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedUni,\n      onChange: e => setSelectedUni(e.target.value),\n      children: universities.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: u\n      }, u, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"mbK94ZpO4Yq31hjM6Y0hebQvUoQ=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Line","jsxDEV","_jsxDEV","LineChart","data","lang","translations","_s","universities","Set","map","row","GEO","selectedUni","setSelectedUni","filtered","filter","REF_DATE","VALUE","chartData","labels","datasets","label","lineChart","parseInt","fill","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","selectUni","value","onChange","e","target","u","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction LineChart({ data, lang, translations }) {\n  const universities = [...new Set(data.map(row => row.GEO))];\n  const [selectedUni, setSelectedUni] = useState(universities[0]);\n\n  const filtered = data.filter(row =>\n    row.GEO === selectedUni && row.REF_DATE && row.VALUE\n  );\n\n  const chartData = {\n    labels: filtered.map(row => row.REF_DATE),\n    datasets: [{\n      label: translations.lineChart,\n      data: filtered.map(row => parseInt(row.VALUE)),\n      fill: false,\n      borderColor: \"blue\",\n    }]\n  };\n\n  return (\n    <div>\n      <h2>{translations.lineChart}</h2>\n      <label>{translations.selectUni}</label>\n      <select value={selectedUni} onChange={e => setSelectedUni(e.target.value)}>\n        {universities.map(u => <option key={u}>{u}</option>)}\n      </select>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default LineChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAMC,YAAY,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACL,IAAI,CAACM,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,GAAG,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,CAAC;EAE/D,MAAMO,QAAQ,GAAGX,IAAI,CAACY,MAAM,CAACL,GAAG,IAC9BA,GAAG,CAACC,GAAG,KAAKC,WAAW,IAAIF,GAAG,CAACM,QAAQ,IAAIN,GAAG,CAACO,KACjD,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEL,QAAQ,CAACL,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACM,QAAQ,CAAC;IACzCI,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAEhB,YAAY,CAACiB,SAAS;MAC7BnB,IAAI,EAAEW,QAAQ,CAACL,GAAG,CAACC,GAAG,IAAIa,QAAQ,CAACb,GAAG,CAACO,KAAK,CAAC,CAAC;MAC9CO,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAKrB,YAAY,CAACiB;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjC7B,OAAA;MAAAyB,QAAA,EAAQrB,YAAY,CAAC0B;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvC7B,OAAA;MAAQ+B,KAAK,EAAEpB,WAAY;MAACqB,QAAQ,EAAEC,CAAC,IAAIrB,cAAc,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAN,QAAA,EACvEnB,YAAY,CAACE,GAAG,CAAC2B,CAAC,iBAAInC,OAAA;QAAAyB,QAAA,EAAiBU;MAAC,GAALA,CAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACT7B,OAAA,CAACF,IAAI;MAACI,IAAI,EAAEe;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACxB,EAAA,CA5BQJ,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AA8BlB,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}