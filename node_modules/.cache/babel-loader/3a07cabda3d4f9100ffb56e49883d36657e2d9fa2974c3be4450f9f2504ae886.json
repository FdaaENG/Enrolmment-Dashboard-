{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport LineChart from \"./Components/LineChart\";\nimport BarChart from \"./Components/BarChart\";\nimport \"./DashboardTabs.css\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [dataEN, setDataEN] = useState([]);\n  const [dataFR, setDataFR] = useState([]);\n  const [data, setData] = useState([]);\n  const [lang, setLang] = useState(\"en\");\n  const [activeTab, setActiveTab] = useState(\"line\");\n  const translations = {\n    en: {\n      title: \"University Enrolment Dashboard\",\n      lineChart: \"Enrolment Over Time\",\n      barChart: \"Gender Comparison\",\n      selectUni: \"Select University\",\n      selectYear: \"Select Year\",\n      selectField: \"Select Field\",\n      selectStatus: \"Select Registration status\"\n    },\n    fr: {\n      title: \"Tableau de bord des inscriptions universitaires\",\n      lineChart: \"Évolution des inscriptions\",\n      barChart: \"Comparaison par sexe\",\n      selectUni: \"Sélectionner l’université\",\n      selectYear: \"Sélectionner l’année\",\n      selectField: \"Sélectionner le champ\",\n      selectStatus: \"Sélectionnez le statut d'inscription\"\n    }\n  };\n\n  // Load both CSV files on mount\n  useEffect(() => {\n    Papa.parse(\"/EN.csv\", {\n      header: true,\n      download: true,\n      complete: results => setDataEN(results.data)\n    });\n    Papa.parse(\"/FR.csv\", {\n      header: true,\n      download: true,\n      complete: results => setDataFR(results.data)\n    });\n  }, []);\n\n  // Switch dataset when language changes\n  useEffect(() => {\n    setData(lang === \"fr\" ? dataFR : dataEN);\n  }, [lang, dataEN, dataFR]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: translations[lang].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lang-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `lang-button ${lang === 'en' ? 'active' : ''}`,\n            onClick: () => setLang('en'),\n            children: \"EN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `lang-button ${lang === 'fr' ? 'active' : ''}`,\n            onClick: () => setLang('fr'),\n            children: \"FR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: activeTab === \"line\" ? /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          lang: lang,\n          translations: translations[lang]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(BarChart, {\n          data: data,\n          lang: lang,\n          translations: translations[lang]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === \"line\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveTab(\"line\"),\n          children: translations[lang].lineChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === \"bar\" ? \"active\" : \"\"}`,\n          onClick: () => setActiveTab(\"bar\"),\n          children: translations[lang].barChart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IorJupKicX+F1yVZAlQoEZqjIZ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","LineChart","BarChart","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","App","_s","dataEN","setDataEN","dataFR","setDataFR","data","setData","lang","setLang","activeTab","setActiveTab","translations","en","title","lineChart","barChart","selectUni","selectYear","selectField","selectStatus","fr","parse","header","download","complete","results","className","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport LineChart from \"./Components/LineChart\";\nimport BarChart from \"./Components/BarChart\";\nimport \"./DashboardTabs.css\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction App() {\n  const [dataEN, setDataEN] = useState([]);\n  const [dataFR, setDataFR] = useState([]);\n  const [data, setData] = useState([]);\n  const [lang, setLang] = useState(\"en\");\n  const [activeTab, setActiveTab] = useState(\"line\");\n\n  const translations = {\n    en: {\n      title: \"University Enrolment Dashboard\",\n      lineChart: \"Enrolment Over Time\",\n      barChart: \"Gender Comparison\",\n      selectUni: \"Select University\",\n      selectYear: \"Select Year\",\n      selectField: \"Select Field\",\n      selectStatus: \"Select Registration status\",\n    },\n    fr: {\n      title: \"Tableau de bord des inscriptions universitaires\",\n      lineChart: \"Évolution des inscriptions\",\n      barChart: \"Comparaison par sexe\",\n      selectUni: \"Sélectionner l’université\",\n      selectYear: \"Sélectionner l’année\",\n      selectField: \"Sélectionner le champ\",\n      selectStatus: \"Sélectionnez le statut d'inscription\",\n    },\n  };\n\n  // Load both CSV files on mount\n  useEffect(() => {\n    Papa.parse(\"/EN.csv\", {\n      header: true,\n      download: true,\n      complete: (results) => setDataEN(results.data),\n    });\n\n    Papa.parse(\"/FR.csv\", {\n      header: true,\n      download: true,\n      complete: (results) => setDataFR(results.data),\n    });\n  }, []);\n\n  // Switch dataset when language changes\n  useEffect(() => {\n    setData(lang === \"fr\" ? dataFR : dataEN);\n  }, [lang, dataEN, dataFR]);\n\n  return (\n    <div className=\"full-page\">\n      <div className=\"dashboard-container\">\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n          <h1>{translations[lang].title}</h1>\n          <div className=\"lang-toggle\">\n            <button\n              className={`lang-button ${lang === 'en' ? 'active' : ''}`}\n              onClick={() => setLang('en')}\n            >\n              EN\n            </button>\n            <button\n              className={`lang-button ${lang === 'fr' ? 'active' : ''}`}\n              onClick={() => setLang('fr')}\n            >\n              FR\n            </button>\n          </div>\n        </div>\n\n        <div className=\"tab-content\">\n          {activeTab === \"line\" ? (\n            <LineChart data={data} lang={lang} translations={translations[lang]} />\n          ) : (\n            <BarChart data={data} lang={lang} translations={translations[lang]} />\n          )}\n        </div>\n\n        <div className=\"tab-bar\">\n          <button\n            className={`tab-button ${activeTab === \"line\" ? \"active\" : \"\"}`}\n            onClick={() => setActiveTab(\"line\")}\n          >\n            {translations[lang].lineChart}\n          </button>\n          <button\n            className={`tab-button ${activeTab === \"bar\" ? \"active\" : \"\"}`}\n            onClick={() => setActiveTab(\"bar\")}\n          >\n            {translations[lang].barChart}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}