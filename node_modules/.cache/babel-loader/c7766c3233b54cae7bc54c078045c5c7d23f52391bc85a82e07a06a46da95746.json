{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../LineChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart({\n  data\n}) {\n  _s();\n  const productOptions = [...new Set(data.map(d => d[\"Products and product groups\"]))];\n  const dateOptions = [...new Set(data.map(d => d.REF_DATE))];\n  const geoOptions = [...new Set(data.map(d => d.GEO))];\n  const uomOptions = [...new Set(data.map(d => d.UOM))];\n  const [selectedProduct, setSelectedProduct] = useState(productOptions[0]);\n  const [selectedGeo, setSelectedGeo] = useState(geoOptions[0]);\n  const [selectedUOM, setSelectedUOM] = useState(uomOptions[0]);\n\n  // Filter to get ALL dates for selected Product + Geo + UOM\n  const filtered = data.filter(d => d[\"Products and product groups\"] === selectedProduct && d.GEO === selectedGeo && d.UOM === selectedUOM);\n\n  // Group and sort by month\n  const sorted = filtered.sort((a, b) => a.REF_DATE.localeCompare(b.REF_DATE));\n  const chartData = {\n    labels: sorted.map(d => d.REF_DATE),\n    datasets: [{\n      label: selectedProduct,\n      data: sorted.map(d => d.VALUE),\n      borderColor: \"#3b82f6\",\n      backgroundColor: \"#3b82f688\",\n      fill: false,\n      tension: 0.3,\n      pointRadius: 4,\n      pointHoverRadius: 6\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Product:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedProduct,\n          onChange: e => setSelectedProduct(e.target.value),\n          children: productOptions.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: p\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 38\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Region (Geo):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedGeo,\n          onChange: e => setSelectedGeo(e.target.value),\n          children: geoOptions.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: g\n          }, g, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Unit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedUOM,\n          onChange: e => setSelectedUOM(e.target.value),\n          children: uomOptions.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: context => `${context.dataset.label}: ${context.parsed.y}`\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: false,\n            title: {\n              display: true,\n              text: selectedUOM\n            }\n          },\n          x: {\n            title: {\n              display: true,\n              text: \"Month\"\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"P7Pa0eZXWjcBe/FUPxbIDZBfI8A=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Line","jsxDEV","_jsxDEV","LineChart","data","_s","productOptions","Set","map","d","dateOptions","REF_DATE","geoOptions","GEO","uomOptions","UOM","selectedProduct","setSelectedProduct","selectedGeo","setSelectedGeo","selectedUOM","setSelectedUOM","filtered","filter","sorted","sort","a","b","localeCompare","chartData","labels","datasets","label","VALUE","borderColor","backgroundColor","fill","tension","pointRadius","pointHoverRadius","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","p","g","u","options","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","parsed","y","scales","beginAtZero","title","display","text","x","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../LineChart.css\";\n\nfunction LineChart({ data }) {\n  const productOptions = [...new Set(data.map(d => d[\"Products and product groups\"]))];\n  const dateOptions = [...new Set(data.map(d => d.REF_DATE))];\n  const geoOptions = [...new Set(data.map(d => d.GEO))];\n  const uomOptions = [...new Set(data.map(d => d.UOM))];\n\n  const [selectedProduct, setSelectedProduct] = useState(productOptions[0]);\n  const [selectedGeo, setSelectedGeo] = useState(geoOptions[0]);\n  const [selectedUOM, setSelectedUOM] = useState(uomOptions[0]);\n\n  // Filter to get ALL dates for selected Product + Geo + UOM\n  const filtered = data.filter(d =>\n    d[\"Products and product groups\"] === selectedProduct &&\n    d.GEO === selectedGeo &&\n    d.UOM === selectedUOM\n  );\n\n  // Group and sort by month\n  const sorted = filtered\n    .sort((a, b) => a.REF_DATE.localeCompare(b.REF_DATE));\n\n  const chartData = {\n    labels: sorted.map(d => d.REF_DATE),\n    datasets: [{\n      label: selectedProduct,\n      data: sorted.map(d => d.VALUE),\n      borderColor: \"#3b82f6\",\n      backgroundColor: \"#3b82f688\",\n      fill: false,\n      tension: 0.3,\n      pointRadius: 4,\n      pointHoverRadius: 6,\n    }]\n  };\n\n  return (\n    <div className=\"chart-box\">\n      <div className=\"filters\">\n        <div className=\"filter-group\">\n          <label>Product:</label>\n          <select value={selectedProduct} onChange={e => setSelectedProduct(e.target.value)}>\n            {productOptions.map(p => <option key={p}>{p}</option>)}\n          </select>\n        </div>\n\n        <div className=\"filter-group\">\n          <label>Region (Geo):</label>\n          <select value={selectedGeo} onChange={e => setSelectedGeo(e.target.value)}>\n            {geoOptions.map(g => <option key={g}>{g}</option>)}\n          </select>\n        </div>\n\n        <div className=\"filter-group\">\n          <label>Unit:</label>\n          <select value={selectedUOM} onChange={e => setSelectedUOM(e.target.value)}>\n            {uomOptions.map(u => <option key={u}>{u}</option>)}\n          </select>\n        </div>\n      </div>\n\n      <Line\n        data={chartData}\n        options={{\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            tooltip: {\n              callbacks: {\n                label: context => `${context.dataset.label}: ${context.parsed.y}`\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: false,\n              title: {\n                display: true,\n                text: selectedUOM\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: \"Month\"\n              }\n            }\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}