{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport '../LineChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart({\n  data,\n  translations\n}) {\n  _s();\n  const fields = [...new Set(data.map(d => d[\"Field of study\"]).filter(Boolean))];\n  const statuses = [...new Set(data.map(d => d[\"Registration status\"]).filter(Boolean))];\n  const institutionTypes = [...new Set(data.map(d => d[\"Institution type\"]).filter(Boolean))];\n  const programs = [...new Set(data.map(d => d[\"Program type\"]).filter(Boolean))];\n  const genders = [...new Set(data.map(d => d[\"Gender\"]).filter(Boolean))];\n  const [field, setField] = useState(fields[0]);\n  const [status, setStatus] = useState(statuses[0]);\n  const [institution, setInstitution] = useState(institutionTypes[0]);\n  const [program, setProgram] = useState(programs[0]);\n  const filtered = data.filter(d => d[\"Field of study\"] === field && d[\"Registration status\"] === status && d[\"Institution type\"] === institution && d[\"Program type\"] === program && d.VALUE && !isNaN(parseInt(d.VALUE)));\n  const years = [...new Set(filtered.map(d => d.REF_DATE))].sort((a, b) => a.localeCompare(b));\n  const chartData = {\n    labels: years,\n    datasets: genders.map((gender, i) => {\n      const color = `hsl(${i * 60}, 70%, 50%)`;\n      return {\n        label: gender,\n        data: years.map(year => {\n          const row = filtered.find(d => d.REF_DATE === year && d.Gender === gender);\n          return row ? parseInt(row.VALUE) : 0;\n        }),\n        borderColor: color,\n        backgroundColor: color,\n        fill: false,\n        tension: 0.3\n      };\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.lineChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-chart-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: field,\n          onChange: e => setField(e.target.value),\n          children: fields.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: f,\n            children: f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 30\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Registration Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: status,\n          onChange: e => setStatus(e.target.value),\n          children: statuses.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s,\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Institution Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: institution,\n          onChange: e => setInstitution(e.target.value),\n          children: institutionTypes.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i,\n            children: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 40\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Program Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: program,\n          onChange: e => setProgram(e.target.value),\n          children: programs.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: p,\n            children: p\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"TKxK7j2um+v5PQ03YCKHW6hrq0k=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Line","jsxDEV","_jsxDEV","LineChart","data","translations","_s","fields","Set","map","d","filter","Boolean","statuses","institutionTypes","programs","genders","field","setField","status","setStatus","institution","setInstitution","program","setProgram","filtered","VALUE","isNaN","parseInt","years","REF_DATE","sort","a","b","localeCompare","chartData","labels","datasets","gender","i","color","label","year","row","find","Gender","borderColor","backgroundColor","fill","tension","className","children","lineChart","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","f","s","p","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport '../LineChart.css';\n\nfunction LineChart({ data, translations }) {\n  const fields = [...new Set(data.map(d => d[\"Field of study\"]).filter(Boolean))];\n  const statuses = [...new Set(data.map(d => d[\"Registration status\"]).filter(Boolean))];\n  const institutionTypes = [...new Set(data.map(d => d[\"Institution type\"]).filter(Boolean))];\n  const programs = [...new Set(data.map(d => d[\"Program type\"]).filter(Boolean))];\n  const genders = [...new Set(data.map(d => d[\"Gender\"]).filter(Boolean))];\n\n  const [field, setField] = useState(fields[0]);\n  const [status, setStatus] = useState(statuses[0]);\n  const [institution, setInstitution] = useState(institutionTypes[0]);\n  const [program, setProgram] = useState(programs[0]);\n\n  const filtered = data.filter(d =>\n    d[\"Field of study\"] === field &&\n    d[\"Registration status\"] === status &&\n    d[\"Institution type\"] === institution &&\n    d[\"Program type\"] === program &&\n    d.VALUE && !isNaN(parseInt(d.VALUE))\n  );\n\n  const years = [...new Set(filtered.map(d => d.REF_DATE))].sort((a, b) => a.localeCompare(b));\n\n  const chartData = {\n    labels: years,\n    datasets: genders.map((gender, i) => {\n      const color = `hsl(${i * 60}, 70%, 50%)`;\n      return {\n        label: gender,\n        data: years.map(year => {\n          const row = filtered.find(d => d.REF_DATE === year && d.Gender === gender);\n          return row ? parseInt(row.VALUE) : 0;\n        }),\n        borderColor: color,\n        backgroundColor: color,\n        fill: false,\n        tension: 0.3,\n      };\n    })\n  };\n\n  return (\n    <div className=\"line-chart-container\">\n      <h2>{translations.lineChart}</h2>\n      <div className=\"line-chart-filters\">\n        <div className=\"dropdown-block\">\n          <label>Field</label>\n          <select value={field} onChange={e => setField(e.target.value)}>\n            {fields.map(f => <option key={f} value={f}>{f}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>Registration Status</label>\n          <select value={status} onChange={e => setStatus(e.target.value)}>\n            {statuses.map(s => <option key={s} value={s}>{s}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>Institution Type</label>\n          <select value={institution} onChange={e => setInstitution(e.target.value)}>\n            {institutionTypes.map(i => <option key={i} value={i}>{i}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>Program Type</label>\n          <select value={program} onChange={e => setProgram(e.target.value)}>\n            {programs.map(p => <option key={p} value={p}>{p}</option>)}\n          </select>\n        </div>\n      </div>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}