{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport './BarChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BarChart({\n  data,\n  translations\n}) {\n  _s();\n  const years = [...new Set(data.map(d => d.REF_DATE).filter(Boolean))];\n  const fields = [...new Set(data.map(d => d[\"Field of study\"]).filter(Boolean))];\n  const statuses = [...new Set(data.map(d => d[\"Status of student in Canada\"]).filter(Boolean))];\n  const institutions = [...new Set(data.map(d => d[\"Institution type\"]).filter(Boolean))];\n  const genders = [...new Set(data.map(d => d.Gender).filter(Boolean))];\n  const [year, setYear] = useState(years[0]);\n  const [field, setField] = useState(fields[0]);\n  const [status, setStatus] = useState(statuses[0]);\n  const [institution, setInstitution] = useState(institutions[0]);\n  const filtered = data.filter(d => d.REF_DATE === year && d[\"Field of study\"] === field && d[\"Status of student in Canada\"] === status && d[\"Institution type\"] === institution);\n  const credentialTypes = [...new Set(filtered.map(d => d[\"Credential type\"]))];\n  const chartData = {\n    labels: credentialTypes,\n    datasets: genders.map((g, i) => ({\n      label: g,\n      backgroundColor: `hsl(${i * 60}, 70%, 50%)`,\n      data: credentialTypes.map(c => {\n        const row = filtered.find(d => d[\"Credential type\"] === c && d.Gender === g);\n        return row ? parseInt(row.VALUE) : 0;\n      })\n    }))\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.barChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-chart-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: year,\n          onChange: e => setYear(e.target.value),\n          children: years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: field,\n          onChange: e => setField(e.target.value),\n          children: fields.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 30\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Status in Canada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: status,\n          onChange: e => setStatus(e.target.value),\n          children: statuses.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Institution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: institution,\n          onChange: e => setInstitution(e.target.value),\n          children: institutions.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(BarChart, \"o+atRCY814z21YOr+9Mjkz8oDDA=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","Bar","jsxDEV","_jsxDEV","BarChart","data","translations","_s","years","Set","map","d","REF_DATE","filter","Boolean","fields","statuses","institutions","genders","Gender","year","setYear","field","setField","status","setStatus","institution","setInstitution","filtered","credentialTypes","chartData","labels","datasets","g","i","label","backgroundColor","c","row","find","parseInt","VALUE","className","children","barChart","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","y","f","s","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/BarChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport './BarChart.css';\n\nfunction BarChart({ data, translations }) {\n  const years = [...new Set(data.map(d => d.REF_DATE).filter(Boolean))];\n  const fields = [...new Set(data.map(d => d[\"Field of study\"]).filter(Boolean))];\n  const statuses = [...new Set(data.map(d => d[\"Status of student in Canada\"]).filter(Boolean))];\n  const institutions = [...new Set(data.map(d => d[\"Institution type\"]).filter(Boolean))];\n  const genders = [...new Set(data.map(d => d.Gender).filter(Boolean))];\n\n  const [year, setYear] = useState(years[0]);\n  const [field, setField] = useState(fields[0]);\n  const [status, setStatus] = useState(statuses[0]);\n  const [institution, setInstitution] = useState(institutions[0]);\n\n  const filtered = data.filter(d =>\n    d.REF_DATE === year &&\n    d[\"Field of study\"] === field &&\n    d[\"Status of student in Canada\"] === status &&\n    d[\"Institution type\"] === institution\n  );\n\n  const credentialTypes = [...new Set(filtered.map(d => d[\"Credential type\"]))];\n\n  const chartData = {\n    labels: credentialTypes,\n    datasets: genders.map((g, i) => ({\n      label: g,\n      backgroundColor: `hsl(${i * 60}, 70%, 50%)`,\n      data: credentialTypes.map(c => {\n        const row = filtered.find(d => d[\"Credential type\"] === c && d.Gender === g);\n        return row ? parseInt(row.VALUE) : 0;\n      })\n    }))\n  };\n\n  return (\n    <div className=\"bar-chart-container\">\n      <h2>{translations.barChart}</h2>\n      <div className=\"bar-chart-filters\">\n        <div className=\"dropdown-block\">\n          <label>Year</label>\n          <select value={year} onChange={e => setYear(e.target.value)}>\n            {years.map(y => <option key={y}>{y}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>Field</label>\n          <select value={field} onChange={e => setField(e.target.value)}>\n            {fields.map(f => <option key={f}>{f}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>Status in Canada</label>\n          <select value={status} onChange={e => setStatus(e.target.value)}>\n            {statuses.map(s => <option key={s}>{s}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>Institution</label>\n          <select value={institution} onChange={e => setInstitution(e.target.value)}>\n            {institutions.map(i => <option key={i}>{i}</option>)}\n          </select>\n        </div>\n      </div>\n      <Bar data={chartData} />\n    </div>\n  );\n}\n\nexport default BarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}