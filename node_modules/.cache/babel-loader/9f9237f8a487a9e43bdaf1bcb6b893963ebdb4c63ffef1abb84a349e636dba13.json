{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/DoughnutChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"../DoughnutChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoughnutChart({\n  data,\n  translations\n}) {\n  _s();\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n  const years = [...new Set(data.map(row => row[\"REF_DATE\"]).filter(Boolean))];\n  const institutions = [...new Set(data.map(row => row[\"Institution type\"]).filter(Boolean))];\n  const statuses = [...new Set(data.map(row => row[\"Status of student in Canada\"]).filter(Boolean))];\n  const [selectedField, setSelectedField] = useState(fields[0]);\n  const [selectedYear, setSelectedYear] = useState(years[0]);\n  const [selectedInstitution, setSelectedInstitution] = useState(institutions[0]);\n  const filtered = data.filter(row => row[\"Field of study\"] === selectedField && row[\"REF_DATE\"] === selectedYear && row[\"Institution type\"] === selectedInstitution && row.VALUE && row[\"Status of student in Canada\"]);\n  const aggregated = {};\n  statuses.forEach(status => aggregated[status] = 0);\n  filtered.forEach(row => {\n    const status = row[\"Status of student in Canada\"];\n    const value = parseInt(row.VALUE) || 0;\n    aggregated[status] += value;\n  });\n  const chartData = {\n    labels: statuses,\n    datasets: [{\n      data: statuses.map(status => aggregated[status]),\n      backgroundColor: [\"#3b82f6\", \"#10b981\", \"#f59e0b\", \"#ef4444\", \"#6366f1\", \"#ec4899\", \"#14b8a6\"]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doughnut-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.doughnutChartTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doughnut-chart-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedField,\n          onChange: e => setSelectedField(e.target.value),\n          children: fields.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 30\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          children: years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectInstitution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedInstitution,\n          onChange: e => setSelectedInstitution(e.target.value),\n          children: institutions.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(DoughnutChart, \"ick7UGrybH4LeosijKJGsmzpT4c=\");\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","useState","Doughnut","jsxDEV","_jsxDEV","DoughnutChart","data","translations","_s","fields","Set","map","row","filter","Boolean","years","institutions","statuses","selectedField","setSelectedField","selectedYear","setSelectedYear","selectedInstitution","setSelectedInstitution","filtered","VALUE","aggregated","forEach","status","value","parseInt","chartData","labels","datasets","backgroundColor","className","children","doughnutChartTitle","fileName","_jsxFileName","lineNumber","columnNumber","selectField","onChange","e","target","f","selectYear","y","selectInstitution","i","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/DoughnutChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"../DoughnutChart.css\";\n\nfunction DoughnutChart({ data, translations }) {\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n  const years = [...new Set(data.map(row => row[\"REF_DATE\"]).filter(Boolean))];\n  const institutions = [...new Set(data.map(row => row[\"Institution type\"]).filter(Boolean))];\n  const statuses = [...new Set(data.map(row => row[\"Status of student in Canada\"]).filter(Boolean))];\n\n  const [selectedField, setSelectedField] = useState(fields[0]);\n  const [selectedYear, setSelectedYear] = useState(years[0]);\n  const [selectedInstitution, setSelectedInstitution] = useState(institutions[0]);\n\n  const filtered = data.filter(row =>\n    row[\"Field of study\"] === selectedField &&\n    row[\"REF_DATE\"] === selectedYear &&\n    row[\"Institution type\"] === selectedInstitution &&\n    row.VALUE &&\n    row[\"Status of student in Canada\"]\n  );\n\n  const aggregated = {};\n  statuses.forEach(status => (aggregated[status] = 0));\n\n  filtered.forEach(row => {\n    const status = row[\"Status of student in Canada\"];\n    const value = parseInt(row.VALUE) || 0;\n    aggregated[status] += value;\n  });\n\n  const chartData = {\n    labels: statuses,\n    datasets: [{\n      data: statuses.map(status => aggregated[status]),\n      backgroundColor: [\"#3b82f6\", \"#10b981\", \"#f59e0b\", \"#ef4444\", \"#6366f1\", \"#ec4899\", \"#14b8a6\"]\n    }]\n  };\n\n  return (\n    <div className=\"doughnut-chart-container\">\n      <h2>{translations.doughnutChartTitle}</h2>\n\n      <div className=\"doughnut-chart-filters\">\n        <div className=\"dropdown-block\">\n          <label>{translations.selectField}</label>\n          <select value={selectedField} onChange={e => setSelectedField(e.target.value)}>\n            {fields.map(f => <option key={f}>{f}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>{translations.selectYear}</label>\n          <select value={selectedYear} onChange={e => setSelectedYear(e.target.value)}>\n            {years.map(y => <option key={y}>{y}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>{translations.selectInstitution}</label>\n          <select value={selectedInstitution} onChange={e => setSelectedInstitution(e.target.value)}>\n            {institutions.map(i => <option key={i}>{i}</option>)}\n          </select>\n        </div>\n      </div>\n\n      <Doughnut data={chartData} />\n    </div>\n  );\n}\n\nexport default DoughnutChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}