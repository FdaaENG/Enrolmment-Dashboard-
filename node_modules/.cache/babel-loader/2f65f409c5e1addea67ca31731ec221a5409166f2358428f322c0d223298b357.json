{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"../BarChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BarChart({\n  data,\n  lang,\n  translations\n}) {\n  _s();\n  const universities = [...new Set(data.map(row => row.GEO).filter(Boolean))];\n  const years = [...new Set(data.map(row => row.REF_DATE).filter(Boolean))];\n  const credentials = [...new Set(data.map(row => row[\"Credential type\"]).filter(Boolean))];\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n  const [selectedUni, setSelectedUni] = useState(universities[0] || \"\");\n  const [selectedYear, setSelectedYear] = useState(years[0] || \"\");\n  const filtered = data.filter(row => row.GEO === selectedUni && row.REF_DATE === selectedYear && row.VALUE && row[\"Credential type\"] && row[\"Field of study\"]);\n\n  // Aggregate enrolment by credential and field\n  const aggregated = {};\n  filtered.forEach(row => {\n    const credential = row[\"Credential type\"];\n    const field = row[\"Field of study\"];\n    const value = parseInt(row.VALUE) || 0;\n    if (!aggregated[field]) aggregated[field] = {};\n    if (!aggregated[field][credential]) aggregated[field][credential] = 0;\n    aggregated[field][credential] += value;\n  });\n  const datasetColors = [\"#3b82f6\", \"#10b981\", \"#f59e0b\", \"#ef4444\", \"#6366f1\", \"#ec4899\", \"#14b8a6\"];\n  const datasets = Object.entries(aggregated).map(([field, creds], idx) => {\n    return {\n      label: field,\n      data: credentials.map(c => creds[c] || 0),\n      backgroundColor: datasetColors[idx % datasetColors.length]\n    };\n  });\n  const chartData = {\n    labels: credentials,\n    datasets: datasets\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.barChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-chart-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectUni\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedUni,\n          onChange: e => setSelectedUni(e.target.value),\n          children: universities.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          children: years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(BarChart, \"T/4wMsQ08wY2nMmOksYQz2iO9DQ=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","Bar","jsxDEV","_jsxDEV","BarChart","data","lang","translations","_s","universities","Set","map","row","GEO","filter","Boolean","years","REF_DATE","credentials","fields","selectedUni","setSelectedUni","selectedYear","setSelectedYear","filtered","VALUE","aggregated","forEach","credential","field","value","parseInt","datasetColors","datasets","Object","entries","creds","idx","label","c","backgroundColor","length","chartData","labels","className","children","barChart","fileName","_jsxFileName","lineNumber","columnNumber","selectUni","onChange","e","target","u","selectYear","y","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/BarChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"../BarChart.css\";\n\nfunction BarChart({ data, lang, translations }) {\n  const universities = [...new Set(data.map(row => row.GEO).filter(Boolean))];\n  const years = [...new Set(data.map(row => row.REF_DATE).filter(Boolean))];\n  const credentials = [...new Set(data.map(row => row[\"Credential type\"]).filter(Boolean))];\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n\n  const [selectedUni, setSelectedUni] = useState(universities[0] || \"\");\n  const [selectedYear, setSelectedYear] = useState(years[0] || \"\");\n\n  const filtered = data.filter(row =>\n    row.GEO === selectedUni &&\n    row.REF_DATE === selectedYear &&\n    row.VALUE && row[\"Credential type\"] && row[\"Field of study\"]\n  );\n\n  // Aggregate enrolment by credential and field\n  const aggregated = {};\n  filtered.forEach(row => {\n    const credential = row[\"Credential type\"];\n    const field = row[\"Field of study\"];\n    const value = parseInt(row.VALUE) || 0;\n    if (!aggregated[field]) aggregated[field] = {};\n    if (!aggregated[field][credential]) aggregated[field][credential] = 0;\n    aggregated[field][credential] += value;\n  });\n\n  const datasetColors = [\n    \"#3b82f6\", \"#10b981\", \"#f59e0b\", \"#ef4444\", \"#6366f1\", \"#ec4899\", \"#14b8a6\"\n  ];\n\n  const datasets = Object.entries(aggregated).map(([field, creds], idx) => {\n    return {\n      label: field,\n      data: credentials.map(c => creds[c] || 0),\n      backgroundColor: datasetColors[idx % datasetColors.length]\n    };\n  });\n\n  const chartData = {\n    labels: credentials,\n    datasets: datasets\n  };\n\n  return (\n    <div className=\"bar-chart-container\">\n      <h2>{translations.barChart}</h2>\n\n      <div className=\"bar-chart-filters\">\n        <div className=\"dropdown-block\">\n          <label>{translations.selectUni}</label>\n          <select value={selectedUni} onChange={e => setSelectedUni(e.target.value)}>\n            {universities.map(u => <option key={u}>{u}</option>)}\n          </select>\n        </div>\n\n        <div className=\"dropdown-block\">\n          <label>{translations.selectYear}</label>\n          <select value={selectedYear} onChange={e => setSelectedYear(e.target.value)}>\n            {years.map(y => <option key={y}>{y}</option>)}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"chart-wrapper\">\n        <Bar data={chartData} />\n      </div>\n    </div>\n  );\n}\n\nexport default BarChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}