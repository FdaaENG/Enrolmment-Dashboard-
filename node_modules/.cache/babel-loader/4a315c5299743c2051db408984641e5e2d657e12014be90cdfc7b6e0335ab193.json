{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport '../LineChart.css'; // ✅ Make sure this file exists and is correctly located\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart({\n  data,\n  lang,\n  translations\n}) {\n  _s();\n  console.log(data);\n  // Extract unique values with filtering for non-empty entries\n  const universities = [...new Set(data.map(row => row.GEO).filter(s => s && s.trim() !== \"\"))];\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(s => s && s.trim() !== \"\"))];\n  const statuses = [...new Set(data.map(row => row[\"Registration status\"]).filter(s => s && s.trim() !== \"\"))];\n\n  // Safe initial state (fallback to empty string if list is empty)\n  const [selectedUni, setSelectedUni] = useState(universities[0] || \"\");\n  const [selectedField, setSelectedField] = useState(fields[0] || \"\");\n  const [selectedStatus, setSelectedStatus] = useState(statuses[0] || \"\");\n\n  // Filter the data\n  const filtered = data.filter(row => row.GEO === selectedUni && row[\"Field of study\"] === selectedField && row[\"Registration status\"] === selectedStatus && row.VALUE && row.REF_DATE);\n\n  // Sort the filtered data by year\n  const sorted = [...filtered].sort((a, b) => a.REF_DATE.localeCompare(b.REF_DATE));\n\n  // Format chart data\n  const chartData = {\n    labels: sorted.map(row => row.REF_DATE),\n    datasets: [{\n      label: `${translations.lineChart} - ${selectedField} - ${selectedStatus}`,\n      data: sorted.map(row => parseInt(row.VALUE)),\n      fill: false,\n      borderColor: \"#2563eb\",\n      tension: 0.3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.lineChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-chart-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectUni\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedUni,\n          onChange: e => setSelectedUni(e.target.value),\n          children: universities.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u,\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedField,\n          onChange: e => setSelectedField(e.target.value),\n          children: fields.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: f,\n            children: f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 30\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedStatus,\n          onChange: e => setSelectedStatus(e.target.value),\n          children: statuses.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s,\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"r+Rc6foV2AfjqIv0AYQAdQ/zi4w=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Line","jsxDEV","_jsxDEV","LineChart","data","lang","translations","_s","console","log","universities","Set","map","row","GEO","filter","s","trim","fields","statuses","selectedUni","setSelectedUni","selectedField","setSelectedField","selectedStatus","setSelectedStatus","filtered","VALUE","REF_DATE","sorted","sort","a","b","localeCompare","chartData","labels","datasets","label","lineChart","parseInt","fill","borderColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectUni","value","onChange","e","target","u","selectField","f","selectStatus","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport '../LineChart.css'; // ✅ Make sure this file exists and is correctly located\n\nfunction LineChart({ data, lang, translations }) {\n    console.log(data);\n  // Extract unique values with filtering for non-empty entries\n  const universities = [...new Set(\n    data.map(row => row.GEO).filter(s => s && s.trim() !== \"\")\n  )];\n  const fields = [...new Set(\n    data.map(row => row[\"Field of study\"]).filter(s => s && s.trim() !== \"\")\n  )];\n  const statuses = [...new Set(\n    data.map(row => row[\"Registration status\"]).filter(s => s && s.trim() !== \"\")\n  )];\n\n  // Safe initial state (fallback to empty string if list is empty)\n  const [selectedUni, setSelectedUni] = useState(universities[0] || \"\");\n  const [selectedField, setSelectedField] = useState(fields[0] || \"\");\n  const [selectedStatus, setSelectedStatus] = useState(statuses[0] || \"\");\n\n  // Filter the data\n  const filtered = data.filter(row =>\n    row.GEO === selectedUni &&\n    row[\"Field of study\"] === selectedField &&\n    row[\"Registration status\"] === selectedStatus &&\n    row.VALUE &&\n    row.REF_DATE\n  );\n\n  // Sort the filtered data by year\n  const sorted = [...filtered].sort((a, b) => a.REF_DATE.localeCompare(b.REF_DATE));\n\n  // Format chart data\n  const chartData = {\n    labels: sorted.map(row => row.REF_DATE),\n    datasets: [{\n      label: `${translations.lineChart} - ${selectedField} - ${selectedStatus}`,\n      data: sorted.map(row => parseInt(row.VALUE)),\n      fill: false,\n      borderColor: \"#2563eb\",\n      tension: 0.3,\n    }]\n  };\n\n  return (\n    <div className=\"line-chart-container\">\n      <h2>{translations.lineChart}</h2>\n\n      <div className=\"line-chart-filters\">\n        {/* University Dropdown */}\n        <div className=\"dropdown-block\">\n          <label>{translations.selectUni}</label>\n          <select value={selectedUni} onChange={e => setSelectedUni(e.target.value)}>\n            {universities.map(u => <option key={u} value={u}>{u}</option>)}\n          </select>\n        </div>\n\n        {/* Field of Study Dropdown */}\n        <div className=\"dropdown-block\">\n          <label>{translations.selectField}</label>\n          <select value={selectedField} onChange={e => setSelectedField(e.target.value)}>\n            {fields.map(f => <option key={f} value={f}>{f}</option>)}\n          </select>\n        </div>\n\n        {/* Registration Status Dropdown */}\n        <div className=\"dropdown-block\">\n          <label>{translations.selectStatus}</label>\n          <select value={selectedStatus} onChange={e => setSelectedStatus(e.target.value)}>\n            {statuses.map(s => <option key={s} value={s}>{s}</option>)}\n          </select>\n        </div>\n      </div>\n\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}