{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport '../LineChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart({\n  data,\n  lang,\n  translations\n}) {\n  _s();\n  const universities = [...new Set(data.map(row => row.GEO).filter(Boolean))];\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n  const statuses = [...new Set(data.map(row => row[\"Registration status\"]).filter(Boolean))];\n  const years = [...new Set(data.map(row => row.REF_DATE).filter(Boolean))];\n  const [selectedUni, setSelectedUni] = useState(universities[0] || \"\");\n  const [selectedField, setSelectedField] = useState(fields[0] || \"\");\n  const [selectedStatus, setSelectedStatus] = useState(statuses[0] || \"\");\n  const [selectedYear, setSelectedYear] = useState(\"\");\n  const filtered = data.filter(row => row.GEO === selectedUni && row[\"Field of study\"] === selectedField && row[\"Registration status\"] === selectedStatus && (!selectedYear || row.REF_DATE === selectedYear) && row.VALUE && row.REF_DATE);\n  const aggregated = {};\n  filtered.forEach(row => {\n    const year = row.REF_DATE;\n    const value = parseInt(row.VALUE) || 0;\n    if (!aggregated[year]) aggregated[year] = 0;\n    aggregated[year] += value;\n  });\n  const sorted = Object.entries(aggregated).map(([year, total]) => ({\n    year,\n    total\n  })).sort((a, b) => a.year.localeCompare(b.year));\n  const chartData = {\n    labels: sorted.map(d => d.year),\n    datasets: [{\n      label: `${translations.lineChart} - ${selectedField} - ${selectedStatus}`,\n      data: sorted.map(d => d.total),\n      fill: false,\n      borderColor: \"#2563eb\",\n      tension: 0.3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.lineChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-chart-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectUni\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedUni,\n          onChange: e => setSelectedUni(e.target.value),\n          children: universities.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u,\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedField,\n          onChange: e => setSelectedField(e.target.value),\n          children: fields.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: f,\n            children: f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 30\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedStatus,\n          onChange: e => setSelectedStatus(e.target.value),\n          children: statuses.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: s,\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: y,\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"oOtHwOU+jhcXKmjXLTcwkEpi4lY=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Line","jsxDEV","_jsxDEV","LineChart","data","lang","translations","_s","universities","Set","map","row","GEO","filter","Boolean","fields","statuses","years","REF_DATE","selectedUni","setSelectedUni","selectedField","setSelectedField","selectedStatus","setSelectedStatus","selectedYear","setSelectedYear","filtered","VALUE","aggregated","forEach","year","value","parseInt","sorted","Object","entries","total","sort","a","b","localeCompare","chartData","labels","d","datasets","label","lineChart","fill","borderColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectUni","onChange","e","target","u","selectField","f","selectStatus","s","selectYear","y","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport '../LineChart.css';\n\nfunction LineChart({ data, lang, translations }) {\n  const universities = [...new Set(data.map(row => row.GEO).filter(Boolean))];\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n  const statuses = [...new Set(data.map(row => row[\"Registration status\"]).filter(Boolean))];\n  const years = [...new Set(data.map(row => row.REF_DATE).filter(Boolean))];\n\n  const [selectedUni, setSelectedUni] = useState(universities[0] || \"\");\n  const [selectedField, setSelectedField] = useState(fields[0] || \"\");\n  const [selectedStatus, setSelectedStatus] = useState(statuses[0] || \"\");\n  const [selectedYear, setSelectedYear] = useState(\"\");\n\n  const filtered = data.filter(row =>\n    row.GEO === selectedUni &&\n    row[\"Field of study\"] === selectedField &&\n    row[\"Registration status\"] === selectedStatus &&\n    (!selectedYear || row.REF_DATE === selectedYear) &&\n    row.VALUE && row.REF_DATE\n  );\n\n  const aggregated = {};\n  filtered.forEach(row => {\n    const year = row.REF_DATE;\n    const value = parseInt(row.VALUE) || 0;\n    if (!aggregated[year]) aggregated[year] = 0;\n    aggregated[year] += value;\n  });\n\n  const sorted = Object.entries(aggregated)\n    .map(([year, total]) => ({ year, total }))\n    .sort((a, b) => a.year.localeCompare(b.year));\n\n  const chartData = {\n    labels: sorted.map(d => d.year),\n    datasets: [{\n      label: `${translations.lineChart} - ${selectedField} - ${selectedStatus}`,\n      data: sorted.map(d => d.total),\n      fill: false,\n      borderColor: \"#2563eb\",\n      tension: 0.3,\n    }]\n  };\n\n  return (\n    <div className=\"line-chart-container\">\n      <h2>{translations.lineChart}</h2>\n      <div className=\"line-chart-filters\">\n        <div className=\"dropdown-block\">\n          <label>{translations.selectUni}</label>\n          <select value={selectedUni} onChange={e => setSelectedUni(e.target.value)}>\n            {universities.map(u => <option key={u} value={u}>{u}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>{translations.selectField}</label>\n          <select value={selectedField} onChange={e => setSelectedField(e.target.value)}>\n            {fields.map(f => <option key={f} value={f}>{f}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>{translations.selectStatus}</label>\n          <select value={selectedStatus} onChange={e => setSelectedStatus(e.target.value)}>\n            {statuses.map(s => <option key={s} value={s}>{s}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>{translations.selectYear}</label>\n          <select value={selectedYear} onChange={e => setSelectedYear(e.target.value)}>\n            <option value=\"\">All</option>\n            {years.map(y => <option key={y} value={y}>{y}</option>)}\n          </select>\n        </div>\n      </div>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}