{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/DonutChart.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DonutChart({\n  data\n}) {\n  const labels = data.map(row => row[\"Products and product groups\"]);\n  const values = data.map(row => row.VALUE);\n  const chartData = {\n    labels,\n    datasets: [{\n      data: values,\n      backgroundColor: [\"#3b82f6\", \"#10b981\", \"#f59e0b\", \"#ef4444\", \"#6366f1\", \"#ec4899\", \"#14b8a6\", \"#8b5cf6\", \"#f43f5e\", \"#22d3ee\"]\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"bottom\"\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.raw;\n            const total = context.chart._metasets[0].total;\n            const percent = (value / total * 100).toFixed(1);\n            return `${context.label}: ${value} (${percent}%)`;\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: \"Product Price Index Share (May 2025)\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n_c = DonutChart;\nexport default DonutChart;\nvar _c;\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"names":["React","Doughnut","jsxDEV","_jsxDEV","DonutChart","data","labels","map","row","values","VALUE","chartData","datasets","backgroundColor","options","responsive","plugins","legend","position","tooltip","callbacks","label","context","value","raw","total","chart","_metasets","percent","toFixed","title","display","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/DonutChart.js"],"sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nfunction DonutChart({ data }) {\n  const labels = data.map(row => row[\"Products and product groups\"]);\n  const values = data.map(row => row.VALUE);\n\n  const chartData = {\n    labels,\n    datasets: [{\n      data: values,\n      backgroundColor: [\n        \"#3b82f6\", \"#10b981\", \"#f59e0b\", \"#ef4444\", \"#6366f1\",\n        \"#ec4899\", \"#14b8a6\", \"#8b5cf6\", \"#f43f5e\", \"#22d3ee\"\n      ]\n    }]\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: { position: \"bottom\" },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const value = context.raw;\n            const total = context.chart._metasets[0].total;\n            const percent = ((value / total) * 100).toFixed(1);\n            return `${context.label}: ${value} (${percent}%)`;\n          }\n        }\n      },\n      title: { display: true, text: \"Product Price Index Share (May 2025)\" }\n    }\n  };\n\n  return <Doughnut data={chartData} options={options} />;\n}\n\nexport default DonutChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,UAAUA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC5B,MAAMC,MAAM,GAAGD,IAAI,CAACE,GAAG,CAACC,GAAG,IAAIA,GAAG,CAAC,6BAA6B,CAAC,CAAC;EAClE,MAAMC,MAAM,GAAGJ,IAAI,CAACE,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACE,KAAK,CAAC;EAEzC,MAAMC,SAAS,GAAG;IAChBL,MAAM;IACNM,QAAQ,EAAE,CAAC;MACTP,IAAI,EAAEI,MAAM;MACZI,eAAe,EAAE,CACf,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;IAEzD,CAAC;EACH,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QAAEC,QAAQ,EAAE;MAAS,CAAC;MAC9BC,OAAO,EAAE;QACPC,SAAS,EAAE;UACTC,KAAK,EAAE,SAAAA,CAASC,OAAO,EAAE;YACvB,MAAMC,KAAK,GAAGD,OAAO,CAACE,GAAG;YACzB,MAAMC,KAAK,GAAGH,OAAO,CAACI,KAAK,CAACC,SAAS,CAAC,CAAC,CAAC,CAACF,KAAK;YAC9C,MAAMG,OAAO,GAAG,CAAEL,KAAK,GAAGE,KAAK,GAAI,GAAG,EAAEI,OAAO,CAAC,CAAC,CAAC;YAClD,OAAO,GAAGP,OAAO,CAACD,KAAK,KAAKE,KAAK,KAAKK,OAAO,IAAI;UACnD;QACF;MACF,CAAC;MACDE,KAAK,EAAE;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAE;MAAuC;IACvE;EACF,CAAC;EAED,oBAAO7B,OAAA,CAACF,QAAQ;IAACI,IAAI,EAAEM,SAAU;IAACG,OAAO,EAAEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxD;AAACC,EAAA,GAlCQjC,UAAU;AAoCnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}