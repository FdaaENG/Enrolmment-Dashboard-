{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport '../LineChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart({\n  data,\n  lang,\n  translations\n}) {\n  _s();\n  const universities = [...new Set(data.map(row => row.GEO))];\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]))];\n  const statuses = [...new Set(data.map(row => row[\"Registration status\"]))];\n  const [selectedUni, setSelectedUni] = useState(universities[0]);\n  const [selectedField, setSelectedField] = useState(fields[0]);\n  const [selectedStatus, setSelectedStatus] = useState(statuses[0]);\n  const filtered = data.filter(row => row.GEO === selectedUni && row[\"Field of study\"] === selectedField && row[\"Registration status\"] === selectedStatus && row.VALUE && row.REF_DATE);\n\n  // Sort by year (REF_DATE)\n  const sorted = [...filtered].sort((a, b) => a.REF_DATE.localeCompare(b.REF_DATE));\n  const chartData = {\n    labels: sorted.map(row => row.REF_DATE),\n    datasets: [{\n      label: `${translations.lineChart} - ${selectedField} - ${selectedStatus}`,\n      data: sorted.map(row => parseInt(row.VALUE)),\n      fill: false,\n      borderColor: \"blue\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"line-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.lineChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line-chart-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectUni\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedUni,\n          onChange: e => setSelectedUni(e.target.value),\n          children: universities.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Field of Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedField,\n          onChange: e => setSelectedField(e.target.value),\n          children: fields.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 26\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Registration Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedStatus,\n          onChange: e => setSelectedStatus(e.target.value),\n          children: statuses.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 28\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"gwSra0tRB7grC+wNh6FIMdu5C+4=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Line","jsxDEV","_jsxDEV","LineChart","data","lang","translations","_s","universities","Set","map","row","GEO","fields","statuses","selectedUni","setSelectedUni","selectedField","setSelectedField","selectedStatus","setSelectedStatus","filtered","filter","VALUE","REF_DATE","sorted","sort","a","b","localeCompare","chartData","labels","datasets","label","lineChart","parseInt","fill","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectUni","value","onChange","e","target","u","f","s","options","maintainAspectRatio","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport '../LineChart.css';\n\nfunction LineChart({ data, lang, translations }) {\n  const universities = [...new Set(data.map(row => row.GEO))];\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]))];\n  const statuses = [...new Set(data.map(row => row[\"Registration status\"]))];\n\n  const [selectedUni, setSelectedUni] = useState(universities[0]);\n  const [selectedField, setSelectedField] = useState(fields[0]);\n  const [selectedStatus, setSelectedStatus] = useState(statuses[0]);\n\n  const filtered = data.filter(row =>\n    row.GEO === selectedUni &&\n    row[\"Field of study\"] === selectedField &&\n    row[\"Registration status\"] === selectedStatus &&\n    row.VALUE &&\n    row.REF_DATE\n  );\n\n  // Sort by year (REF_DATE)\n  const sorted = [...filtered].sort((a, b) => a.REF_DATE.localeCompare(b.REF_DATE));\n\n  const chartData = {\n    labels: sorted.map(row => row.REF_DATE),\n    datasets: [{\n      label: `${translations.lineChart} - ${selectedField} - ${selectedStatus}`,\n      data: sorted.map(row => parseInt(row.VALUE)),\n      fill: false,\n      borderColor: \"blue\",\n    }]\n  };\n\n  return (\n    <div className=\"line-chart-container\">\n  <h2>{translations.lineChart}</h2>\n\n  <div className=\"line-chart-filters\">\n    {/* University Dropdown */}\n    <div>\n      <label>{translations.selectUni}</label>\n      <select value={selectedUni} onChange={e => setSelectedUni(e.target.value)}>\n        {universities.map(u => <option key={u}>{u}</option>)}\n      </select>\n    </div>\n\n    {/* Field of Study Dropdown */}\n    <div>\n      <label>Field of Study</label>\n      <select value={selectedField} onChange={e => setSelectedField(e.target.value)}>\n        {fields.map(f => <option key={f}>{f}</option>)}\n      </select>\n    </div>\n\n    {/* Registration Status Dropdown */}\n    <div>\n      <label>Registration Status</label>\n      <select value={selectedStatus} onChange={e => setSelectedStatus(e.target.value)}>\n        {statuses.map(s => <option key={s}>{s}</option>)}\n      </select>\n    </div>\n  </div>\n<Line data={chartData} options={{ maintainAspectRatio: false }} />\n</div>\n\n  );\n}\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}