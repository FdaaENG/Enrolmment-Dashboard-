{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"../BarChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BarChart({\n  data,\n  lang,\n  translations\n}) {\n  _s();\n  const universities = [...new Set(data.map(row => row.GEO).filter(Boolean))];\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n  const genders = [...new Set(data.map(row => row.Gender).filter(Boolean))];\n  const years = [...new Set(data.map(row => row.REF_DATE).filter(Boolean))];\n  const credentials = [...new Set(data.map(row => row[\"Credential type\"]).filter(Boolean))];\n  const [selectedUni, setSelectedUni] = useState(universities[0] || \"\");\n  const [selectedField, setSelectedField] = useState(fields[0] || \"\");\n  const [selectedGender, setSelectedGender] = useState(genders[0] || \"\");\n  const [selectedYear, setSelectedYear] = useState(years[0] || \"\");\n  const filtered = data.filter(row => row.GEO === selectedUni && row[\"Field of study\"] === selectedField && row.Gender === selectedGender && row.REF_DATE === selectedYear && row.VALUE && row[\"Credential type\"]);\n  const aggregated = {};\n  filtered.forEach(row => {\n    const type = row[\"Credential type\"];\n    const value = parseInt(row.VALUE) || 0;\n    if (!aggregated[type]) aggregated[type] = 0;\n    aggregated[type] += value;\n  });\n  const sorted = Object.entries(aggregated).map(([type, total]) => ({\n    type,\n    total\n  })).sort((a, b) => a.total - b.total);\n  const chartData = {\n    labels: sorted.map(d => d.type),\n    datasets: [{\n      label: `${translations.barChart} - ${selectedGender}`,\n      data: sorted.map(d => d.total),\n      backgroundColor: \"#3b82f6\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bar-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.barChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-chart-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectUni\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedUni,\n          onChange: e => setSelectedUni(e.target.value),\n          children: universities.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedField,\n          onChange: e => setSelectedField(e.target.value),\n          children: fields.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 30\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectStatus.replace(\"Registration \", \"Gender \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedGender,\n          onChange: e => setSelectedGender(e.target.value),\n          children: genders.map(g => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: g\n          }, g, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          children: years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(BarChart, \"9J4MBiFKnnVMgHel0XkmAbJslP0=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","Bar","jsxDEV","_jsxDEV","BarChart","data","lang","translations","_s","universities","Set","map","row","GEO","filter","Boolean","fields","genders","Gender","years","REF_DATE","credentials","selectedUni","setSelectedUni","selectedField","setSelectedField","selectedGender","setSelectedGender","selectedYear","setSelectedYear","filtered","VALUE","aggregated","forEach","type","value","parseInt","sorted","Object","entries","total","sort","a","b","chartData","labels","d","datasets","label","barChart","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectUni","onChange","e","target","u","selectField","f","selectStatus","replace","g","selectYear","y","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/BarChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"../BarChart.css\";\n\nfunction BarChart({ data, lang, translations }) {\n  const universities = [...new Set(data.map(row => row.GEO).filter(Boolean))];\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n  const genders = [...new Set(data.map(row => row.Gender).filter(Boolean))];\n  const years = [...new Set(data.map(row => row.REF_DATE).filter(Boolean))];\n  const credentials = [...new Set(data.map(row => row[\"Credential type\"]).filter(Boolean))];\n\n  const [selectedUni, setSelectedUni] = useState(universities[0] || \"\");\n  const [selectedField, setSelectedField] = useState(fields[0] || \"\");\n  const [selectedGender, setSelectedGender] = useState(genders[0] || \"\");\n  const [selectedYear, setSelectedYear] = useState(years[0] || \"\");\n\n  const filtered = data.filter(row =>\n    row.GEO === selectedUni &&\n    row[\"Field of study\"] === selectedField &&\n    row.Gender === selectedGender &&\n    row.REF_DATE === selectedYear &&\n    row.VALUE && row[\"Credential type\"]\n  );\n\n  const aggregated = {};\n  filtered.forEach(row => {\n    const type = row[\"Credential type\"];\n    const value = parseInt(row.VALUE) || 0;\n    if (!aggregated[type]) aggregated[type] = 0;\n    aggregated[type] += value;\n  });\n\n  const sorted = Object.entries(aggregated)\n    .map(([type, total]) => ({ type, total }))\n    .sort((a, b) => a.total - b.total);\n\n  const chartData = {\n    labels: sorted.map(d => d.type),\n    datasets: [\n      {\n        label: `${translations.barChart} - ${selectedGender}`,\n        data: sorted.map(d => d.total),\n        backgroundColor: \"#3b82f6\",\n      }\n    ]\n  };\n\n  return (\n    <div className=\"bar-chart-container\">\n      <h2>{translations.barChart}</h2>\n\n      <div className=\"bar-chart-filters\">\n        <div className=\"dropdown-block\">\n          <label>{translations.selectUni}</label>\n          <select value={selectedUni} onChange={e => setSelectedUni(e.target.value)}>\n            {universities.map(u => <option key={u}>{u}</option>)}\n          </select>\n        </div>\n\n        <div className=\"dropdown-block\">\n          <label>{translations.selectField}</label>\n          <select value={selectedField} onChange={e => setSelectedField(e.target.value)}>\n            {fields.map(f => <option key={f}>{f}</option>)}\n          </select>\n        </div>\n\n        <div className=\"dropdown-block\">\n          <label>{translations.selectStatus.replace(\"Registration \", \"Gender \")}</label>\n          <select value={selectedGender} onChange={e => setSelectedGender(e.target.value)}>\n            {genders.map(g => <option key={g}>{g}</option>)}\n          </select>\n        </div>\n\n        <div className=\"dropdown-block\">\n          <label>{translations.selectYear}</label>\n          <select value={selectedYear} onChange={e => setSelectedYear(e.target.value)}>\n            {years.map(y => <option key={y}>{y}</option>)}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"chart-wrapper\">\n        <Bar data={chartData} />\n      </div>\n    </div>\n  );\n}\n\nexport default BarChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAMC,YAAY,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACL,IAAI,CAACM,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;EAC3E,MAAMC,MAAM,GAAG,CAAC,GAAG,IAAIN,GAAG,CAACL,IAAI,CAACM,GAAG,CAACC,GAAG,IAAIA,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAACE,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;EACnF,MAAME,OAAO,GAAG,CAAC,GAAG,IAAIP,GAAG,CAACL,IAAI,CAACM,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACM,MAAM,CAAC,CAACJ,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;EACzE,MAAMI,KAAK,GAAG,CAAC,GAAG,IAAIT,GAAG,CAACL,IAAI,CAACM,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACQ,QAAQ,CAAC,CAACN,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;EACzE,MAAMM,WAAW,GAAG,CAAC,GAAG,IAAIX,GAAG,CAACL,IAAI,CAACM,GAAG,CAACC,GAAG,IAAIA,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAACE,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;EAEzF,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAACS,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACrE,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAACgB,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACnE,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAACiB,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EACtE,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAACmB,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;EAEhE,MAAMW,QAAQ,GAAGzB,IAAI,CAACS,MAAM,CAACF,GAAG,IAC9BA,GAAG,CAACC,GAAG,KAAKS,WAAW,IACvBV,GAAG,CAAC,gBAAgB,CAAC,KAAKY,aAAa,IACvCZ,GAAG,CAACM,MAAM,KAAKQ,cAAc,IAC7Bd,GAAG,CAACQ,QAAQ,KAAKQ,YAAY,IAC7BhB,GAAG,CAACmB,KAAK,IAAInB,GAAG,CAAC,iBAAiB,CACpC,CAAC;EAED,MAAMoB,UAAU,GAAG,CAAC,CAAC;EACrBF,QAAQ,CAACG,OAAO,CAACrB,GAAG,IAAI;IACtB,MAAMsB,IAAI,GAAGtB,GAAG,CAAC,iBAAiB,CAAC;IACnC,MAAMuB,KAAK,GAAGC,QAAQ,CAACxB,GAAG,CAACmB,KAAK,CAAC,IAAI,CAAC;IACtC,IAAI,CAACC,UAAU,CAACE,IAAI,CAAC,EAAEF,UAAU,CAACE,IAAI,CAAC,GAAG,CAAC;IAC3CF,UAAU,CAACE,IAAI,CAAC,IAAIC,KAAK;EAC3B,CAAC,CAAC;EAEF,MAAME,MAAM,GAAGC,MAAM,CAACC,OAAO,CAACP,UAAU,CAAC,CACtCrB,GAAG,CAAC,CAAC,CAACuB,IAAI,EAAEM,KAAK,CAAC,MAAM;IAAEN,IAAI;IAAEM;EAAM,CAAC,CAAC,CAAC,CACzCC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACF,KAAK,GAAGG,CAAC,CAACH,KAAK,CAAC;EAEpC,MAAMI,SAAS,GAAG;IAChBC,MAAM,EAAER,MAAM,CAAC1B,GAAG,CAACmC,CAAC,IAAIA,CAAC,CAACZ,IAAI,CAAC;IAC/Ba,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,GAAGzC,YAAY,CAAC0C,QAAQ,MAAMvB,cAAc,EAAE;MACrDrB,IAAI,EAAEgC,MAAM,CAAC1B,GAAG,CAACmC,CAAC,IAAIA,CAAC,CAACN,KAAK,CAAC;MAC9BU,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBACE/C,OAAA;IAAKgD,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCjD,OAAA;MAAAiD,QAAA,EAAK7C,YAAY,CAAC0C;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEhCrD,OAAA;MAAKgD,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCjD,OAAA;QAAKgD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjD,OAAA;UAAAiD,QAAA,EAAQ7C,YAAY,CAACkD;QAAS;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCrD,OAAA;UAAQgC,KAAK,EAAEb,WAAY;UAACoC,QAAQ,EAAEC,CAAC,IAAIpC,cAAc,CAACoC,CAAC,CAACC,MAAM,CAACzB,KAAK,CAAE;UAAAiB,QAAA,EACvE3C,YAAY,CAACE,GAAG,CAACkD,CAAC,iBAAI1D,OAAA;YAAAiD,QAAA,EAAiBS;UAAC,GAALA,CAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENrD,OAAA;QAAKgD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjD,OAAA;UAAAiD,QAAA,EAAQ7C,YAAY,CAACuD;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzCrD,OAAA;UAAQgC,KAAK,EAAEX,aAAc;UAACkC,QAAQ,EAAEC,CAAC,IAAIlC,gBAAgB,CAACkC,CAAC,CAACC,MAAM,CAACzB,KAAK,CAAE;UAAAiB,QAAA,EAC3EpC,MAAM,CAACL,GAAG,CAACoD,CAAC,iBAAI5D,OAAA;YAAAiD,QAAA,EAAiBW;UAAC,GAALA,CAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENrD,OAAA;QAAKgD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjD,OAAA;UAAAiD,QAAA,EAAQ7C,YAAY,CAACyD,YAAY,CAACC,OAAO,CAAC,eAAe,EAAE,SAAS;QAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9ErD,OAAA;UAAQgC,KAAK,EAAET,cAAe;UAACgC,QAAQ,EAAEC,CAAC,IAAIhC,iBAAiB,CAACgC,CAAC,CAACC,MAAM,CAACzB,KAAK,CAAE;UAAAiB,QAAA,EAC7EnC,OAAO,CAACN,GAAG,CAACuD,CAAC,iBAAI/D,OAAA;YAAAiD,QAAA,EAAiBc;UAAC,GAALA,CAAC;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENrD,OAAA;QAAKgD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjD,OAAA;UAAAiD,QAAA,EAAQ7C,YAAY,CAAC4D;QAAU;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCrD,OAAA;UAAQgC,KAAK,EAAEP,YAAa;UAAC8B,QAAQ,EAAEC,CAAC,IAAI9B,eAAe,CAAC8B,CAAC,CAACC,MAAM,CAACzB,KAAK,CAAE;UAAAiB,QAAA,EACzEjC,KAAK,CAACR,GAAG,CAACyD,CAAC,iBAAIjE,OAAA;YAAAiD,QAAA,EAAiBgB;UAAC,GAALA,CAAC;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrD,OAAA;MAAKgD,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BjD,OAAA,CAACF,GAAG;QAACI,IAAI,EAAEuC;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChD,EAAA,CAlFQJ,QAAQ;AAAAiE,EAAA,GAARjE,QAAQ;AAoFjB,eAAeA,QAAQ;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}