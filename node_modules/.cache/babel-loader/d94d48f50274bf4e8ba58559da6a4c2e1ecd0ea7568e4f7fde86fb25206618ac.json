{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/DonutChart.js\",\n  _s = $RefreshSig$();\n// src/components/DonutChart.js\nimport React, { useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport \"../Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nfunction DonutChart({\n  data\n}) {\n  _s();\n  const products = [...new Set(data.map(d => d[\"Products and product groups\"]))];\n  const months = [...new Set(data.map(d => d.REF_DATE))];\n  const [product, setProduct] = useState(products[0]);\n  const [month, setMonth] = useState(months[0]);\n  const filtered = data.filter(d => d[\"Products and product groups\"] === product && d.REF_DATE === month);\n  const grouped = {};\n  filtered.forEach(d => {\n    const geo = d.GEO;\n    const value = parseFloat(d.VALUE);\n    if (!grouped[geo]) grouped[geo] = 0;\n    grouped[geo] += value;\n  });\n  const chartData = {\n    labels: Object.keys(grouped),\n    datasets: [{\n      label: `${product} - ${month}`,\n      data: Object.values(grouped),\n      backgroundColor: [\"#3b82f6\", \"#10b981\", \"#f59e0b\", \"#ef4444\", \"#6366f1\", \"#ec4899\", \"#14b8a6\"],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"donut-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: product,\n          onChange: e => setProduct(e.target.value),\n          children: products.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: p\n          }, p, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: month,\n          onChange: e => setMonth(e.target.value),\n          children: months.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: m\n          }, m, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 30\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(DonutChart, \"2bybAOO1RZyeGfb6BEN3zvfW3RA=\");\n_c = DonutChart;\nexport default DonutChart;\nvar _c;\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"names":["React","useState","Doughnut","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","DonutChart","data","_s","products","Set","map","d","months","REF_DATE","product","setProduct","month","setMonth","filtered","filter","grouped","forEach","geo","GEO","value","parseFloat","VALUE","chartData","labels","Object","keys","datasets","label","values","backgroundColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","p","m","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/DonutChart.js"],"sourcesContent":["// src/components/DonutChart.js\nimport React, { useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend\n} from \"chart.js\";\nimport \"../Chart.css\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction DonutChart({ data }) {\n  const products = [...new Set(data.map(d => d[\"Products and product groups\"]))];\n  const months = [...new Set(data.map(d => d.REF_DATE))];\n\n  const [product, setProduct] = useState(products[0]);\n  const [month, setMonth] = useState(months[0]);\n\n  const filtered = data.filter(d =>\n    d[\"Products and product groups\"] === product &&\n    d.REF_DATE === month\n  );\n\n  const grouped = {};\n  filtered.forEach(d => {\n    const geo = d.GEO;\n    const value = parseFloat(d.VALUE);\n    if (!grouped[geo]) grouped[geo] = 0;\n    grouped[geo] += value;\n  });\n\n  const chartData = {\n    labels: Object.keys(grouped),\n    datasets: [\n      {\n        label: `${product} - ${month}`,\n        data: Object.values(grouped),\n        backgroundColor: [\n          \"#3b82f6\", \"#10b981\", \"#f59e0b\",\n          \"#ef4444\", \"#6366f1\", \"#ec4899\", \"#14b8a6\"\n        ],\n        borderWidth: 1\n      }\n    ]\n  };\n\n  return (\n    <div className=\"donut-chart-container\">\n      <div className=\"filters\">\n        <div className=\"filter-group\">\n          <label>Product</label>\n          <select value={product} onChange={e => setProduct(e.target.value)}>\n            {products.map(p => <option key={p}>{p}</option>)}\n          </select>\n        </div>\n        <div className=\"filter-group\">\n          <label>Month</label>\n          <select value={month} onChange={e => setMonth(e.target.value)}>\n            {months.map(m => <option key={m}>{m}</option>)}\n          </select>\n        </div>\n      </div>\n      <Doughnut data={chartData} />\n    </div>\n  );\n}\n\nexport default DonutChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}