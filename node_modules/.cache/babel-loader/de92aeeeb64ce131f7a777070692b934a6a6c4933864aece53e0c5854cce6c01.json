{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart({\n  data\n}) {\n  _s();\n  const productOptions = [...new Set(data.map(d => d[\"Products and product groups\"]))];\n  const dateOptions = [...new Set(data.map(d => d.REF_DATE))];\n  const [selectedProduct, setSelectedProduct] = useState(productOptions[0]);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const filtered = data.filter(d => d[\"Products and product groups\"] === selectedProduct && (!selectedDate || d.REF_DATE === selectedDate));\n  const chartData = {\n    labels: filtered.map(d => d.REF_DATE),\n    datasets: [{\n      label: selectedProduct,\n      data: filtered.map(d => d.VALUE),\n      borderColor: [\"#3b82f6\", \"#ec4899\", \"#f59e0b\"][index],\n      fill: false,\n      tension: 0.3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedProduct,\n        onChange: e => setSelectedProduct(e.target.value),\n        children: productOptions.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: p\n        }, p, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        children: \"Month: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), dateOptions.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: d\n        }, d, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"BSJP2Kay6Z0Z7jwbr9BYUIydrXE=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Line","jsxDEV","_jsxDEV","LineChart","data","_s","productOptions","Set","map","d","dateOptions","REF_DATE","selectedProduct","setSelectedProduct","selectedDate","setSelectedDate","filtered","filter","chartData","labels","datasets","label","VALUE","borderColor","index","fill","tension","style","width","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","p","marginLeft","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/LineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction LineChart({ data }) {\n  const productOptions = [...new Set(data.map(d => d[\"Products and product groups\"]))];\n  const dateOptions = [...new Set(data.map(d => d.REF_DATE))];\n\n  const [selectedProduct, setSelectedProduct] = useState(productOptions[0]);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n\n  const filtered = data.filter(d =>\n    d[\"Products and product groups\"] === selectedProduct &&\n    (!selectedDate || d.REF_DATE === selectedDate)\n  );\n\n  const chartData = {\n    labels: filtered.map(d => d.REF_DATE),\n    datasets: [{\n      label: selectedProduct,\n      data: filtered.map(d => d.VALUE),\n      borderColor: [\"#3b82f6\", \"#ec4899\", \"#f59e0b\"][index],\n      fill: false,\n      tension: 0.3,\n    }]\n  };\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <div style={{ marginBottom: \"20px\" }}>\n        <label>Product: </label>\n        <select value={selectedProduct} onChange={e => setSelectedProduct(e.target.value)}>\n          {productOptions.map(p => <option key={p}>{p}</option>)}\n        </select>\n\n        <label style={{ marginLeft: \"20px\" }}>Month: </label>\n        <select value={selectedDate} onChange={e => setSelectedDate(e.target.value)}>\n          <option value=\"\">All</option>\n          {dateOptions.map(d => <option key={d}>{d}</option>)}\n        </select>\n      </div>\n\n      <Line data={chartData} />\n    </div>\n  );\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}