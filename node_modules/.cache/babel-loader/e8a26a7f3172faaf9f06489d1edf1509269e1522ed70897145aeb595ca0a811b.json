{"ast":null,"code":"var _jsxFileName = \"/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/DoughnutChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"../DoughnutChart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoughnutChart({\n  data,\n  translations\n}) {\n  _s();\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n  const years = [...new Set(data.map(row => row[\"REF_DATE\"]).filter(Boolean))];\n  const institutions = [...new Set(data.map(row => row[\"Institution type\"]).filter(Boolean))];\n  const [selectedField, setSelectedField] = useState(fields[0]);\n  const [selectedYear, setSelectedYear] = useState(years[0]);\n  const [selectedInstitution, setSelectedInstitution] = useState(institutions[0]);\n  const filtered = data.filter(row => row[\"Field of study\"] === selectedField && row[\"REF_DATE\"] === selectedYear && row[\"Institution type\"] === selectedInstitution && row.VALUE && row[\"Status of student in Canada\"] && row[\"Gender\"]);\n  const aggregated = {};\n  filtered.forEach(row => {\n    const status = row[\"Status of student in Canada\"];\n    const gender = row[\"Gender\"];\n    const key = `${status} - ${gender}`;\n    const value = parseInt(row.VALUE) || 0;\n    if (!aggregated[key]) aggregated[key] = 0;\n    aggregated[key] += value;\n  });\n  const labels = Object.keys(aggregated);\n  const values = labels.map(label => aggregated[label]);\n  const chartData = {\n    labels,\n    datasets: [{\n      data: values,\n      backgroundColor: [\"#3b82f6\", \"#60a5fa\", \"#10b981\", \"#34d399\", \"#f59e0b\", \"#fbbf24\", \"#ef4444\", \"#f87171\", \"#6366f1\", \"#8b5cf6\"]\n    }]\n  };\n  const chartOptions = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const value = context.raw;\n            const total = context.chart._metasets[0].total;\n            const percent = (value / total * 100).toFixed(1);\n            return `${context.label}: ${value} (${percent}%)`;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doughnut-chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: translations.doughnutChartTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doughnut-chart-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedField,\n          onChange: e => setSelectedField(e.target.value),\n          children: fields.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: f\n          }, f, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 30\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          children: years.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: y\n          }, y, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: translations.selectInstitution\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedInstitution,\n          onChange: e => setSelectedInstitution(e.target.value),\n          children: institutions.map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: i\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(DoughnutChart, \"ick7UGrybH4LeosijKJGsmzpT4c=\");\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","useState","Doughnut","jsxDEV","_jsxDEV","DoughnutChart","data","translations","_s","fields","Set","map","row","filter","Boolean","years","institutions","selectedField","setSelectedField","selectedYear","setSelectedYear","selectedInstitution","setSelectedInstitution","filtered","VALUE","aggregated","forEach","status","gender","key","value","parseInt","labels","Object","keys","values","label","chartData","datasets","backgroundColor","chartOptions","plugins","tooltip","callbacks","context","raw","total","chart","_metasets","percent","toFixed","className","children","doughnutChartTitle","fileName","_jsxFileName","lineNumber","columnNumber","selectField","onChange","e","target","f","selectYear","y","selectInstitution","i","options","_c","$RefreshReg$"],"sources":["/Users/fdaaalhalaki/Desktop/Enrolmment-Dashboard-/bilingual-dashboard/src/Components/DoughnutChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport \"../DoughnutChart.css\";\n\nfunction DoughnutChart({ data, translations }) {\n  const fields = [...new Set(data.map(row => row[\"Field of study\"]).filter(Boolean))];\n  const years = [...new Set(data.map(row => row[\"REF_DATE\"]).filter(Boolean))];\n  const institutions = [...new Set(data.map(row => row[\"Institution type\"]).filter(Boolean))];\n\n  const [selectedField, setSelectedField] = useState(fields[0]);\n  const [selectedYear, setSelectedYear] = useState(years[0]);\n  const [selectedInstitution, setSelectedInstitution] = useState(institutions[0]);\n\n  const filtered = data.filter(row =>\n    row[\"Field of study\"] === selectedField &&\n    row[\"REF_DATE\"] === selectedYear &&\n    row[\"Institution type\"] === selectedInstitution &&\n    row.VALUE &&\n    row[\"Status of student in Canada\"] &&\n    row[\"Gender\"]\n  );\n\n  const aggregated = {};\n  filtered.forEach(row => {\n    const status = row[\"Status of student in Canada\"];\n    const gender = row[\"Gender\"];\n    const key = `${status} - ${gender}`;\n    const value = parseInt(row.VALUE) || 0;\n\n    if (!aggregated[key]) aggregated[key] = 0;\n    aggregated[key] += value;\n  });\n\n  const labels = Object.keys(aggregated);\n  const values = labels.map(label => aggregated[label]);\n\n  const chartData = {\n    labels,\n    datasets: [{\n      data: values,\n      backgroundColor: [\n        \"#3b82f6\", \"#60a5fa\", \"#10b981\", \"#34d399\",\n        \"#f59e0b\", \"#fbbf24\", \"#ef4444\", \"#f87171\",\n        \"#6366f1\", \"#8b5cf6\"\n      ]\n    }]\n  };\n\n  const chartOptions = {\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const value = context.raw;\n            const total = context.chart._metasets[0].total;\n            const percent = ((value / total) * 100).toFixed(1);\n            return `${context.label}: ${value} (${percent}%)`;\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"doughnut-chart-container\">\n      <h2>{translations.doughnutChartTitle}</h2>\n\n      <div className=\"doughnut-chart-filters\">\n        <div className=\"dropdown-block\">\n          <label>{translations.selectField}</label>\n          <select value={selectedField} onChange={e => setSelectedField(e.target.value)}>\n            {fields.map(f => <option key={f}>{f}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>{translations.selectYear}</label>\n          <select value={selectedYear} onChange={e => setSelectedYear(e.target.value)}>\n            {years.map(y => <option key={y}>{y}</option>)}\n          </select>\n        </div>\n        <div className=\"dropdown-block\">\n          <label>{translations.selectInstitution}</label>\n          <select value={selectedInstitution} onChange={e => setSelectedInstitution(e.target.value)}>\n            {institutions.map(i => <option key={i}>{i}</option>)}\n          </select>\n        </div>\n      </div>\n\n      <Doughnut data={chartData} options={chartOptions} />\n    </div>\n  );\n}\n\nexport default DoughnutChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}